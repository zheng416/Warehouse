import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;


/**
 * <h1>CargoPlane</h1> Represents a Cargo Plane
 *
 * @author Wenxi Zhang & Jacky Zheng
 *
 * @version 2018-12-04
 */
public class CargoPlane extends Vehicle {
    final double gasRate = 2.33;
//    private String licensePlate;
//    private double maxWeight;
//    private double currentWeight;
//    private int zipDest;
//    private ArrayList<Package> packages;
    private int range = 0;

    /**
     * Default Constructor
     */
    //============================================================================
    public CargoPlane() {
        super();
    }

    //============================================================================

    /**
     * Constructor
     *
     * @param licensePlate1 license plate of vehicle
     * @param maxWeight1    maximum weight that the vehicle can hold
     */
    //============================================================================
    public CargoPlane(String licensePlate1, double maxWeight1) {
        super(licensePlate1, maxWeight1);
    }

    //============================================================================

    /**
     * Overides its superclass method. Instead, after each iteration, the range will
     * increase by 10.
     *
     * @param warehousePackages List of packages to add from
     */
    @Override
    public void fill(ArrayList<Package> warehousePackages) {
        int count = 0;

        boolean flag = true;
        while (flag) {
            for (int j = 0; j < warehousePackages.size() ; j++) {
                if (warehousePackages.get(j).distance(getZipDest()) ==
                        range && warehousePackages.get(j).getWeight() +
                        getCurrentWeight() <= getMaxWeight()) {
                    if (addPackage(warehousePackages.get(j))) {
                        count++;
                    }
                }
            }
            int moreCount = 0;
            for (int i = 0; i < warehousePackages.size() ; i++) {
                if (warehousePackages.get(i).distance(getZipDest()) > range &&
                        warehousePackages.get(i).getWeight() <= getMaxWeight() - getCurrentWeight()) {
                    moreCount++;
                }
            }

            if (count == warehousePackages.size() || moreCount == 0) {
                flag = false;
            } else if (moreCount > 0) {
                range++;
            }
        }

    }

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Cargo Plane.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 2.33)
     * </p>
     */
    @Override
    public double getProfit() {
        double p = 0;
        for (int i = 0; i < getPackages().size(); i++) {
            p += getPackages().get(i).getPrice();
        }
        double profit;
        //As of now, Vocareum doesn't want us to increment to ceiling(10).
//        if ((range % 10) == 0) {
//            profit = p - (gasRate * (range));
//        } else {
//            profit = p - (gasRate * (range - (range % 10) + 10));
//        }
//        System.out.println(p);
//        System.out.println(profit);
//        System.out.println(range);
        profit = p - (gasRate * range);
        //System.out.println(profit);
        //String profitText = String.format("%.2f", profit);
        return profit;
    }

    /**
     * Generates a String of the Cargo Plane report. Cargo plane report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in cargo plane</li>
     * </ul>
     *
     * @return Cargo Plane Report
     */
    @Override
    public String report() {
        NumberFormat numberFormatter = NumberFormat.getCurrencyInstance();
        //String profitText = String.format("%.2f", getProfit());

        if (getProfit() < 0) {
            return "==========Cargo Plane Report==========\n" +
                    "License Plate No.: " + getLicensePlate() + "\n" +
                    "Destination: " + getZipDest() + "\n" +
                    "Weight Load: " + getCurrentWeight() + "/" + getMaxWeight() + "\n" +
                    "Net Profit: (" + numberFormatter.format(Math.abs(getProfit())) +
                    ")" + "\n" + super.report() +
                    "==============================";
        } else {
            return "==========Cargo Plane Report==========\n" +
                    "License Plate No.: " + getLicensePlate() + "\n" +
                    "Destination: " + getZipDest() + "\n" +
                    "Weight Load: " + getCurrentWeight() + "/" + getMaxWeight() + "\n" +
                    "Net Profit: " + numberFormatter.format(getProfit()) + "\n" + super.report() +
                    "==============================";
        }
    }




}